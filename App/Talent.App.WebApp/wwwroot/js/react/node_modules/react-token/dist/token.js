'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DefaultToken = function (_React$PureComponent) {
  _inherits(DefaultToken, _React$PureComponent);

  function DefaultToken() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DefaultToken);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DefaultToken.__proto__ || Object.getPrototypeOf(DefaultToken)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      hover: false
    }, _this.onMouseEnter = function (e) {
      _this.setState({ hover: true });
    }, _this.onMouseLeave = function (e) {
      _this.setState({ hover: false });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DefaultToken, [{
    key: 'render',
    value: function render() {
      var styles = {
        container: {
          alignItems: 'center',
          backgroundColor: '#000000',
          borderRadius: '3px',
          color: 'rgba(255,255,255,1)',
          display: 'inline-flex',
          marginBottom: 2,
          marginRight: 6,
          marginTop: 2,
          paddingBottom: 3,
          paddingLeft: 8,
          paddingRight: 8,
          paddingTop: 3,
          minHeight: 23
        },
        text: {
          paddingRight: 10,
          fontWeight: 400
        }
      };

      var deleteStyle = this.state.hover ? { cursor: 'pointer', color: 'rgba(255,255,255,0.7)' } : { cursor: 'pointer' };

      return _react2.default.createElement(
        'li',
        { style: styles.container, className: 'rt-token' },
        _react2.default.createElement(
          'span',
          { style: styles.text, className: 'rt-token-text' },
          this.props.text
        ),
        _react2.default.createElement(
          'span',
          {
            className: 'rt-token-delete',
            style: deleteStyle,
            onMouseEnter: this.onMouseEnter,
            onMouseLeave: this.onMouseLeave,
            onClick: this.props.onRemove
          },
          '\u2715'
        )
      );
    }
  }]);

  return DefaultToken;
}(_react2.default.PureComponent);

DefaultToken.propTypes = {
  onRemove: _propTypes2.default.func,
  text: _propTypes2.default.string
};
DefaultToken.defaultProps = {
  onRemove: function onRemove() {}
};
exports.default = DefaultToken;
module.exports = exports['default'];